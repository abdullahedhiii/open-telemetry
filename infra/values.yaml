postgresql:
 fullnameOverride: postgres
   
 auth:
    username: abdullah
    password: edhi
    postgresPassword: edhi
    database: mydb_1

 primary:
   persistence:
    enabled: true
    storageClass: ""
    size: 10Gi

   podSecurityContext:
    enabled: true
    fsGroup: 1001

   containerSecurityContext:
    enabled: true
    runAsUser: 1001

   service:
    type: ClusterIP

 volumePermissions:
  enabled: true

 metrics:
  readinessProbe:
   enabled: true
   customCommand:
    command:
      - /bin/sh
      - -c
      - pg_isready -U abdullah -d mydb_1

  livenessProbe:
   enabled: true
   customCommand:
    command:
      - /bin/sh
      - -c
      - pg_isready -U abdullah -d mydb_1
      
elasticsearch:
  name: elasticsearch
  namespace: default
  image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
  replicas: 1
  service:
    type: ClusterIP
    ports:
      http: 9200
      transport: 9300
  resources:
    limits:
      memory: "2Gi"
      cpu: "1000m"
    requests:
      memory: "1Gi"
      cpu: "500m"
  config:
    clusterName: "Demo-Elastic"
    discoveryType: "single-node"
    networkHost: "0.0.0.0"
    xpackSecurityEnabled: true
    xpackHttpSSLEnabled: false
    xpackTransportSSLEnabled: false
  storage:
    emptyDir: true

fluentd:
  image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
  logPath: /fluentd/log/app.log
  posFile: /fluentd/log/app.pos
  logPvc: shared-logs-pvc

  elasticsearch:
    host: elasticsearch-service
    port: 9200
    scheme: https
    user: abdullah
    password: edhi12
    sslVerify: false

