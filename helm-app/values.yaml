postgresql:
 fullnameOverride: postgres
   
 auth:
    username: abdullah
    password: edhi
    postgresPassword: edhi
    database: mydb_1


 primary:
   persistence:
    enabled: true
    storageClass: ""
    size: 10Gi

   podSecurityContext:
    enabled: true
    fsGroup: 1001

   containerSecurityContext:
    enabled: true
    runAsUser: 1001

   service:
    type: ClusterIP

 volumePermissions:
  enabled: true

 metrics:
  readinessProbe:
   enabled: true
   customCommand:
    command:
      - /bin/sh
      - -c
      - pg_isready -U abdullah -d mydb_1

  livenessProbe:
   enabled: true
   customCommand:
    command:
      - /bin/sh
      - -c
      - pg_isready -U abdullah -d mydb_1


frontend:
  labels:
    app: frontend
    name: frontend
  deploy:
    name: frontend
    replicas: 1
    containers:
      name: frontend
      imagePullPolicy: Always
      image: abdullahedhii/opentel-demo-project:frontend-image
      ports:
        containerPort: 80
  service:
    name: frontend-service
    type: ClusterIP
    ports:
      protocol: TCP
      port: 6600
      targetPort: 80

backend:
  deploy:
    name: backend
    replicas: 1
    image: abdullahedhii/opentel-demo-project:backend-image
    imagePullPolicy: Always
    containers:
      name: backend
      ports:
        - name: http
          containerPort: 8000
        - name: metrics
          containerPort: 2222
    volumeMounts:
      - name: shared-log
        mountPath: /fluentd/log

  pvc:
    name: shared-logs-pvc
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 1Gi

  service:
    name: backend-service
    type: ClusterIP
    ports:
      - name: http
        port: 8000
        targetPort: 8000
        protocol: TCP
      - name: metrics
        port: 2222
        targetPort: 2222
        protocol: TCP

prometheus:
  replicaCount: 1
  
  alertmanager:
   enabled: false

  prometheus-pushgateway:
   enabled: false

  kube-state-metrics:
   enabled: false

  prometheus-node-exporter:
   enabled: false

  
  server:
   nameOverride: prometheus
   fullnameOverride: prometheus-service
   enabled: true
   service:
    type: ClusterIP
    port: 9090
    targetPort: 9090

   extraScrapeConfigs:
    - job_name: 'otel-collector-system-metrics'
      static_configs:
        - targets: ['otel-collector-service:9464']

    - job_name: 'cadvisor'
      static_configs:
        - targets: ['cadvisor-service:8080']

    - job_name: 'prometheus'
      static_configs:
        - targets: ['localhost:9090']

    - job_name: 'backend'
      static_configs:
        - targets: ['backend-service:2222']
 
   persistentVolume:
     enabled: false

elasticsearch:
  global:
    storageClass: ""  
    security:
      allowInsecureImages: true
    fullnameOverride: "elasticsearch-service"
  
  clusterName: "Demo-Elastic"

  master:
    replicaCount: 1
    heapSize: 512m 
    resources:
     limits:
       memory: 2Gi
     requests:
       memory: 1Gi

  data:
    replicaCount: 0

  coordinating:
    replicaCount: 0

  ingest:
    enabled: false

  persistence:
    enabled: false

  plugins: []


  esConfig:
    elasticsearch.yml: |
      cluster.name: Demo-Elastic
      node.name: ${HOSTNAME}
      discovery.type: single-node
      network.host: 0.0.0.0
      http.port: 9200
      transport.port: 9300
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false

  volumePermissions:
    enabled: true

  extraVolumes:
    - name: config-volume
      configMap:
        name: elasticsearch-config
    - name: esdata
      emptyDir: {}

  extraVolumeMounts:
    - name: config-volume
      mountPath: /usr/share/elasticsearch/config2/elasticsearch.yml
      subPath: elasticsearch.yml
    - name: esdata
      mountPath: /usr/share/elasticsearch/data

  service:
    type: ClusterIP
    ports:
      restAPI: 9200
      transport: 9300

  security:
    enabled: false  
    tls:
      restEncryption: false
      internode: false
      autoGenerated: false

Kibana:
